{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/footer/index.js","components/Slider3/index.js","components/ReactMapGl/index.js","App.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","tokenConfig","getState","token","auth","config","headers","RegisterModal","state","modal","name","email","password","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","error","this","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","isAuthenticated","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","user","login","Logout","logout","AppNavbar","authLinks","NavItem","guestLinks","Navbar","dark","expand","Container","NavbarToggler","Collapse","navbar","Nav","initialState","items","loading","localStorage","getItem","isLoading","combineReducers","item","action","filter","_id","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Footer","class","Slider3","onSliderChange","setMapStyle","Slider","mapStyle","defaultValue","min","max","step","vertical","barClassName","React","TOKEN","ReactMapGl","useState","isFullscreen","latitude","longitude","zoom","mapboxApiAccessToken","viewport","setViewport","width","height","position","top","console","log","showShowStyle","onViewportChange","App","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63457adb.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n//RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n    return {\n        type: GET_ERRORS,\n        payload: { msg, status, id }\n    }\n}\n// CLEAR ERRORS\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};\n","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';","import axios from 'axios';\nimport { returnErrors } from './errorActions'\n\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n} from \"./types\";\nimport { readSync } from 'fs';\n\n//Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n    //User loading\n    dispatch({ type: USER_LOADING });\n\n    axios.get('api/auth/user', tokenConfig(getState))\n        .then(res => dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n            });\n        })\n}\n//Register User\nexport const register = ({ name, email, password }) => dispatch => {\n    //Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // Request body\n    const body = JSON.stringify({ name, email, password });\n\n    axios.post('api/users', body, config)\n        .then(res => dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        });\n};\n\n// Login User\n\nexport const login = ({ email, password }) => dispatch => {\n    //Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // Request body\n    const body = JSON.stringify({ email, password });\n\n    axios.post('api/auth', body, config)\n        .then(res => dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n            dispatch({\n                type: LOGIN_FAIL\n            });\n        });\n};\n\n\n// Logout User\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n    //Get token from localstorage\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    };\n\n    //If token, add to headers\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n    return config;\n}","import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\n\nclass RegisterModal extends Component {\n    state = {\n        modal: false,\n        name: '',\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if (error !== prevProps.error) {\n            //Check for register error\n            if (error.id === 'REGISTER_FAIL') {\n                this.setState({ msg: error.msg.msg });\n            } else {\n                this.setState({ msg: null });\n            }\n\n        }\n        // ...add to line 36 {isAutheticated}\n        // if (this.state.modal) {\n        //     if (isAuthenticated) {\n        //         this.toggle();\n\n        //     }\n        // }\n\n\n    }\n\n    toggle = () => {\n        //Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { name, email, password } = this.state;\n\n        // Create user object\n        const newUser = {\n            name,\n            email,\n            password\n        };\n        //Attempt to register\n        this.props.register(newUser);\n\n\n    };\n    render() {\n        return (\n            <div>\n                <NavLink onClick={this.toggle} href=\"#\">\n                    Register\n                </NavLink>\n\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n                    <ModalBody>\n                        {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>) : null}\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n                                <Label for=\"name\">Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"name\"\n                                    id=\"name\"\n                                    placeholder=\"Name\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n\n                                <Label for=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Button\n                                    color=\"dark\"\n                                    style={{ marginTop: '2rem' }}\n                                    block\n                                >Register\n                        </Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal >\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\nexport default connect(mapStateToProps, { register, clearErrors })(RegisterModal);\n","import React, { Component } from 'react';\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\n\n\nclass LoginModal extends Component {\n    state = {\n        modal: false,\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        login: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if (error !== prevProps.error) {\n            //Check for register error\n            if (error.id === 'LOGIN_FAIL') {\n                this.setState({ msg: error.msg.msg });\n            } else {\n                this.setState({ msg: null });\n            }\n\n        }\n        // j...add to line 36 {isAutheticated}\n        // if (this.state.modal) {\n        //     if (isAuthenticated) {\n        //         this.toggle();\n\n        //     }\n        // }\n\n\n    }\n\n    toggle = () => {\n        //Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const { email, password } = this.state;\n\n        const user = {\n            email,\n            password\n        }\n\n        // Attempt to login\n        this.props.login(user);\n\n    };\n    render() {\n        return (\n            <div>\n                <NavLink onClick={this.toggle} href=\"#\">\n                    Login\n                </NavLink>\n\n                <Modal\n                    isOpen={this.state.modal}\n                    toggle={this.toggle}\n                >\n                    <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n                    <ModalBody>\n                        {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>) : null}\n                        <Form onSubmit={this.onSubmit}>\n                            <FormGroup>\n\n\n                                <Label for=\"email\">Email</Label>\n                                <Input\n                                    type=\"email\"\n                                    name=\"email\"\n                                    id=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n\n                                <Label for=\"password\">Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    placeholder=\"Password\"\n                                    className=\"mb-3\"\n                                    onChange={this.onChange}\n                                />\n                                <Button\n                                    color=\"dark\"\n                                    style={{ marginTop: '2rem' }}\n                                    block\n                                >Login\n                        </Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal >\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n});\nexport default connect(mapStateToProps, { login, clearErrors })(LoginModal);\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component {\n    static propTypes = {\n        logout: PropTypes.func.isRequired\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <NavLink onClick={this.props.logout} href=\"#\">\n                    Logout\n               </NavLink>\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(null, { logout })(Logout);","import React, { Component, Fragment } from \"react\";\nimport \"./AppNavbar/ AppNavbar.css\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n  // UncontrolledDropdown,\n  // DropdownToggle,\n  // DropdownMenu,\n  // DropdownItem,\n  // NavbarText\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport RegisterModal from \"./auth/RegisterModal\";\nimport LoginModal from \"./auth/LoginModal\";\nimport Logout from \"./auth/Logout\";\nimport SearchCollapse from \"./SearchCollapse\";\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <Fragment>\n        <NavItem>\n          <span className=\"navbar-text mr-3\">\n            <strong>{user ? `Welcome ${user.name}` : \"\"}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar dark expand=\"sm\" className=\"appnavbar\">\n          <Container>\n            <h1 className=\"logo\">PRISM NYC</h1>\n            {/* <NavbarBrand className=\"logo\" href=\"/\">\n              PRISM NYC\n            </NavbarBrand> */}\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto drop\" navbar>\n                {isAuthenticated ? authLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, null)(AppNavbar);\n","import { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\n\nconst initialState = {\n    items: [],\n    loading: false\n};\nexport default function(state=initialState, action){\n    switch (action.type){\n        case GET_ITEMS:\n            return {\n                ...state,\n                items: action.payload,\n                loading: false\n            };\n        case DELETE_ITEM:\n            return {\n                ...state,\n                items: state.items.filter(item => item._id !==action.payload)\n            };  \n            \n        case ADD_ITEM:\n            return{\n                ...state,\n                items: [action.payload, ...state.items]\n            };\n\n        case ITEMS_LOADING:\n            return{\n                ...state,\n                loading:  true\n            };\n        default:\n            return state;\n    }\n}","import {GET_ERRORS, CLEAR_ERRORS} from '../actions/types';\n\nconst initialState ={\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function(state= initialState, action){\n    switch(action.type){\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS:\n            return{\n                msg: {},\n                status: null,\n                id: null\n            };\n        default:\n            return state;    \n    }\n}","import {\n  USER_LOADING,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  isLoading: false,\n  user: null\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport itemReducer from './itemReducer';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    item: itemReducer,\n    error:  errorReducer,\n    auth: authReducer\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(\n    applyMiddleware(...middleware),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__({trace: true })\n));\n\nexport default store;\n","import React from \"react\";\nimport \"./footer.css\";\n\nfunction Footer() {\n    return(\n        <div>\n            <nav class=\"fixed-bottom footer navbar-light \">\n                <a class=\"footertext\" href=\"https://github.com/Koalescere/deniXone\">deniXone was created by: Gavin Martin, Sean Hellier, Kayode Oseni and Daniel Mayer</a>\n                </nav>\n        </div>\n    )\n}\n\n\nexport default Footer;","import React from \"react\";\nimport { Slider, RangeSlider } from \"rsuite\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\n// import ReactMapGl from \"./ReactMapGl\";\nimport \"./Slider3.css\";\n\nfunction log(value) {\n  console.log(value); //eslint-disable-line\n}\n\nclass Slider3 extends React.Component {\n  onSliderChange = value => {\n    // dataSwitch(value);\n    // console.log(value);\n    this.props.setMapStyle(value);\n  };\n\n  //onAfterChange = value => {\n  //  console.log(value); //eslint-disable-line\n  //};\n\n  render() {\n    return (\n      <div className=\"styleslider\">\n        <Slider\n          id=\"slider\"\n          value={this.props.mapStyle}\n          onChange={this.onSliderChange}\n          //onAfterChange={this.onAfterChange}\n          defaultValue={2018}\n          min={2016}\n          max={2018}\n          step={1}\n          vertical\n          barClassName=\"stylebar\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Slider3;\n","import React, { useState } from \"react\";\nimport ReactMapGL from \"react-map-gl\";\nimport { Slider, RangeSlider } from \"rsuite\";\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport Slider3 from \"../Slider3\";\n\nvar TOKEN =\n  \"pk.eyJ1Ijoic2VhbmxlaWZoZWxsaWVyIiwiYSI6ImNrNDV5anVzZDBkdjczbHA1dW5rNHNwcmEifQ.iSbpiPjqUBw2n881PqsbuQ\";\n// \"pk.eyJ1IjoiZGFuaWVsMjE4IiwiYSI6ImNrNDI2M3dhNjAxbXQza21rMmJrZTNpeGIifQ.QtSS2CZJCCb4EasGfmteVw\";\n\nvar styleHolder = \"\";\n\nfunction ReactMapGl() {\n  const [mapStyle, setMapStyle] = useState(2018);\n\n  const [viewport, setViewport] = useState({\n    isFullscreen: true,\n    latitude: 40.05,\n    longitude: -73.843,\n    zoom: 9,\n    mapboxApiAccessToken: { TOKEN }\n  });\n\n  function showShowStyle() {\n    console.log(mapStyle);\n    switch (mapStyle) {\n      case 2016:\n        return \"mapbox://styles/seanleifhellier/ck594e82i1s3x1coyjizcn489\";\n      case 2017:\n        return \"mapbox://styles/seanleifhellier/ck595wnpr1kcc1coxyi8yfkgc\";\n      case 2018:\n        return \"mapbox://styles/seanleifhellier/ck5960gca0bov1cs7w1gobg3x\";\n      default:\n        return \"mapbox://styles/seanleifhellier/ck5960gca0bov1cs7w1gobg3x\";\n    }\n  }\n\n  return (\n    <div>\n      <ReactMapGL\n        {...viewport}\n        className=\"mapContainer\"\n        width=\"100vw\"\n        height=\"120vw\"\n        position=\"absolute\"\n        top=\"80px\"\n        mapStyle={showShowStyle()}\n        // \"mapbox://styles/daniel218/ck57oy76f0hhh1cmbv01ins8g\"\n        // \"mapbox://styles/seanleifhellier/ck4wtai8j0f0n1cpa682uw9h0\"\n        // \"mapbox://styles/daniel218/ck4foemqf0bcx1co45ueme2hd\"\n        onViewportChange={setViewport}\n        mapboxApiAccessToken={TOKEN}\n      />\n      <Slider3 setMapStyle={setMapStyle} mapStyle={mapStyle} />\n    </div>\n  );\n}\n\nexport default ReactMapGl;\n// 2016\n// mapbox://styles/seanleifhellier/ck53x0eyf04it1cl6tdcpr69c\n","import React, { Component } from \"react\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport { Container, Col } from \"reactstrap\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/authActions\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Footer from \"./components/footer\";\nimport ReactMapGl from \"./components/ReactMapGl\";\n// import MapslideContainer from \"./components/MapslideContainer\";\n\nclass App extends Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar />\n          <container className=\"sidemap\">\n            <ReactMapGl />\n          </container>\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}